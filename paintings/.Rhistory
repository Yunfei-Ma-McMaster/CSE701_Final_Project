#load the image
img = readJPEG(paste(names_of_paintings[k],".jpg",sep = ""))
#get height and width of the image
height_of_image = dim(img)[1]
width_of_image = dim(img)[2]
step_height = trunc(height_of_image / 100)
step_width = trunc(width_of_image / 100)
height_length = trunc(height_of_image / step_height)
width_length = trunc(width_of_image/step_width)
#get rgb colors of the image
r = img[,,1]
g = img[,,2]
b = img[,,3]
#initial array to hold the value
initial_array_l = as.vector(rep(0, width_length))
initial_array_u = as.vector(rep(0, width_length))
initial_array_v = as.vector(rep(0, width_length))
#create data frame for LUV color
for(i in seq(1,height_of_image,step_height))
{
x = RGB(r[i,],g[i,],b[i,])
cord = coords(as(x,"LUV"))
string_array_line_l = as.vector(rep(0, width_length))
string_array_line_u = as.vector(rep(0, width_length))
string_array_line_v = as.vector(rep(0, width_length))
for (j in seq(1,width_of_image,step_width))
{
jj = 1 + (j - 1) / step_width
string_array_line_l[jj] = cord[j,"L"]
string_array_line_u[jj] = cord[j,"U"]
string_array_line_v[jj] = cord[j, "V"]
}
#combine the array
initial_array_l = rbind(initial_array_l, string_array_line_l)
initial_array_u = rbind(initial_array_u, string_array_line_u)
initial_array_v = rbind(initial_array_v, string_array_line_v)
}
write.csv(initial_array_l[-1,], paste(names_of_paintings[k],"_l",".csv",sep = ""), row.names = FALSE)
write.csv(initial_array_u[-1,], paste(names_of_paintings[k],"_u",".csv",sep = ""), row.names = FALSE)
write.csv(initial_array_v[-1,], paste(names_of_paintings[k],"_v",".csv",sep = ""), row.names = FALSE)
print(k)
}
k = 47
#load the image
img = readJPEG(paste(names_of_paintings[k],".jpg",sep = ""))
#get height and width of the image
height_of_image = dim(img)[1]
width_of_image = dim(img)[2]
step_height = trunc(height_of_image / 100)
step_width = trunc(width_of_image / 100)
height_length = trunc(height_of_image / step_height)
width_length = trunc(width_of_image/step_width)
#get rgb colors of the image
r = img[,,1]
g = img[,,2]
b = img[,,3]
#initial array to hold the value
initial_array_l = as.vector(rep(0, width_length))
initial_array_u = as.vector(rep(0, width_length))
initial_array_v = as.vector(rep(0, width_length))
#create data frame for LUV color
for(i in seq(1,height_of_image,step_height))
{
x = RGB(r[i,],g[i,],b[i,])
cord = coords(as(x,"LUV"))
string_array_line_l = as.vector(rep(0, width_length))
string_array_line_u = as.vector(rep(0, width_length))
string_array_line_v = as.vector(rep(0, width_length))
for (j in seq(1,width_of_image,step_width))
{
jj = 1 + (j - 1) / step_width
string_array_line_l[jj] = cord[j,"L"]
string_array_line_u[jj] = cord[j,"U"]
string_array_line_v[jj] = cord[j, "V"]
}
#combine the array
initial_array_l = rbind(initial_array_l, string_array_line_l)
initial_array_u = rbind(initial_array_u, string_array_line_u)
initial_array_v = rbind(initial_array_v, string_array_line_v)
}
write.csv(initial_array_l[-1,], paste(names_of_paintings[k],"_l",".csv",sep = ""), row.names = FALSE)
write.csv(initial_array_u[-1,], paste(names_of_paintings[k],"_u",".csv",sep = ""), row.names = FALSE)
write.csv(initial_array_v[-1,], paste(names_of_paintings[k],"_v",".csv",sep = ""), row.names = FALSE)
library(jpeg)
library(colorspace)
library(tidyverse)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
names_of_paintings
initial_vector = as.vector(rep(0,3))
for (k in 1:length(paintings$Painting))
{
#load the image
img = readJPEG(paste(names_of_paintings[k],".jpg",sep = ""))
#get height and width of the image
height_of_image = dim(img)[1]
width_of_image = dim(img)[2]
#get rgb colors of the image
r = img[,,1]
g = img[,,2]
b = img[,,3]
#sum of mean
sumL = 0
sumU = 0
sumV = 0
#create data frame for LUV color
for(i in seq(1,height_of_image))
{
x = RGB(r[i,],g[i,],b[i,])
cord = coords(as(x,"LUV"))
sumL = sumL + mean(cord[,"L"])
sumU = sumU + mean(cord[,"U"])
sumV = sumV + mean(cord[,"V"])
}
avg_L = sumL / height_of_image
avg_U = sumU / height_of_image
avg_V = sumV / height_of_image
average_color = as.vector(c(avg_L,avg_U,avg_V))
initial_vector = rbind(initial_vector,average_color)
print(k)
}
write.csv(initial_vector[-1,], "paintings_avg_color.csv", row.names = FALSE, col.names = FALSE)
View(initial_vector)
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
row = 50
col = 50
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
row = 50
col = 50
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paitings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paintings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
tile_distribution_data = read_csv("OutputImageCSV/Barak Shoshany.csv",col_names = FALSE)
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/", tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = "output_images/Barak Shoshany.jpg", format = "jpg")
image_write(img, path = "output_images/Barak Shoshany.jpg", format = "jpg")
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/", tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = "output_images/Barak Shoshany.jpg", format = "jpg")
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/", tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = "outputImages/Barak Shoshany.jpg", format = "jpg")
filename = list.files(path = "outputImageCSV/",pattern = "*.csv")
filenames
filename
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
print(image_dir_csv_name)
}
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
library(tools)
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
library(tools)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
row = 50
col = 50
filename = list.files(path = "outputImageCSV/",pattern = "*.csv")
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImage/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImage/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
k = 2
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImage/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
path = paste("outputImage/", file_path_sans_ext(filename[k]), ".jpg", sep = "")
path
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
print(i)
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
pre_filename
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
do.call(file.remove, pre_filename)
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
do.call(file.remove, list(pre_filename))
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
do.call(file.remove, list(pre_filename), path =  "outputImages/")
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
for (i in 1:length(pre_filename))
{
file.remove(paste("outputImages/", pre_filename[i], sep = ""))
}
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
print(paste("Generating file: ","outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""))
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
print(paste("Generating file: ","outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""))
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
library(tools)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
row = 50
col = 50
filename = list.files(path = "outputImageCSV/",pattern = "*.csv")
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
for (i in 1:length(pre_filename))
{
file.remove(paste("outputImages/", pre_filename[i], sep = ""))
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paintings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
print(paste("Generating file: ","outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""))
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
library(jpeg)
library(colorspace)
library(tidyverse)
library(magick)
library(tools)
paintings = read_csv("paintings.csv")
names_of_paintings = paintings$Painting
row = 50
col = 50
filename = list.files(path = "outputImageCSV/",pattern = "*.csv")
pre_filename = list.files(path = "outputImages/", pattern = "*.jpg")
for (i in 1:length(pre_filename))
{
file.remove(paste("outputImages/", pre_filename[i], sep = ""))
}
for(i in 1:length(names_of_paintings))
{
img = image_read(paste("paintings/", names_of_paintings[i], ".jpg",sep = ""))
img = image_scale(img,"5x5!")
image_write(img,path = paste("paintings/tileimage_resize/", names_of_paintings[i], ".jpg", sep = ""), format = "jpg",quality = 100)
}
#set the "matrix" for mosaic with a initial image
img = image_read("paintings/tileimage_resize/Acrobate et jeune arlequin.jpg")
input = rep(img,row*col)
for(k in 1:length(filename))
{
image_dir_csv_name = paste("outputImageCSV/",filename[k], sep = "")
tile_distribution_data = read_csv(image_dir_csv_name,col_names = FALSE)
print(paste("Generating file: ","outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""))
#make the mosaic
for (i in 1:row)
{
for (j in 1:col)
{
img = image_read(paste("paintings/tileimage_resize/",
tile_distribution_data[i,j], ".jpg",sep = ""))
input[(i-1) * row + j] = img
}
}
img = image_montage(input,tile = paste(row,"x",col,sep = ""),
geometry = geometry_area(width = row,height = col, x_off = 0,y_off = 0))
image_write(img, path = paste("outputImages/", file_path_sans_ext(filename[k]), ".jpg", sep = ""), format = "jpg")
}
